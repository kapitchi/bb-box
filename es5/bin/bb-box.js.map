{"version":3,"sources":["../../src/bin/bb-box.js"],"names":["program","dic","factoryListener","ins","def","setLogger","createLogger","name","instance","box","get","plugin","getAsync","registerPlugin","onCli","console","log","e","warn","message","createBox","op","services","cmd","params","skipDependencies","process","on","shutdown","exit","Error","error","runBoxOp","_","require","serviceName","logger","entry","msg","createCommand","command","option","version","action","partial","help","parse","argv"],"mappings":"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","file":"bb-box.js","sourcesContent":["\r\nconst _ = require('lodash');\r\n\r\nconst {dic} = require('./dic');\r\n\r\nfunction createLogger(serviceName) {\r\n  const logger = {\r\n    log: (entry) => {\r\n      console.log('[' + serviceName + '] ' + entry.msg);\r\n    }\r\n  };\r\n\r\n  return logger;\r\n}\r\n\r\nasync function createBox(program) {\r\n  dic.factoryListener = function(ins, def) {\r\n    //console.log(def); //XXX\r\n    if (ins.setLogger) {\r\n      ins.setLogger(createLogger(def.name));\r\n    }\r\n    return ins;\r\n  };\r\n\r\n  dic.instance('bbBoxOpts', {});\r\n\r\n  const box = dic.get('bbBox');\r\n\r\n  //TODO\r\n  try {\r\n    const plugin = await dic.getAsync('dockerComposePlugin');\r\n    box.registerPlugin(plugin);\r\n    plugin.onCli(program);\r\n    console.log('DockerComposePlugin: enabled'); //XXX\r\n  } catch(e) {\r\n    console.warn('DockerComposePlugin: disabled - ' + e.message); //XXX\r\n  }\r\n\r\n  try {\r\n    const plugin = await dic.getAsync('reverseProxyPlugin');\r\n    box.registerPlugin(plugin);\r\n    plugin.onCli(program);\r\n    console.log('ReverseProxyPlugin: enabled'); //XXX\r\n  } catch(e) {\r\n    console.warn('ReverseProxyPlugin: disabled - ' + e.message); //XXX\r\n  }\r\n\r\n  // try {\r\n  //   box.registerPlugin(new GitPlugin());\r\n  //   console.log('GitPlugin: enabled'); //XXX\r\n  // } catch(e) {\r\n  //   console.error('GitPlugin: disabled - no git installed'); //XXX\r\n  // }\r\n\r\n  return box;\r\n}\r\n\r\nfunction createCommand(program, cmd) {\r\n  return program.command(cmd)\r\n    .option('--skip-dependencies', 'Skip the operation on the service dependencies')\r\n}\r\n\r\nasync function runBoxOp(box, op, services, cmd) {\r\n  const params = {\r\n    services,\r\n  };\r\n\r\n  if (cmd.skipDependencies) {\r\n    params.skipDependencies = true;\r\n  }\r\n\r\n  process.on('SIGINT', async function () {\r\n    await box.shutdown();\r\n    process.exit(0);\r\n  });\r\n\r\n  if (!box[op]) {\r\n    throw new Error(`No ${op} implemented on BbBox`);\r\n  }\r\n\r\n  try {\r\n    await box[op](params);\r\n  } catch(e) {\r\n    console.error(e); //XXX\r\n  }\r\n\r\n  await box.shutdown();\r\n}\r\n\r\n(async () => {\r\n  const program = require('commander');\r\n\r\n  const box = await createBox(program);\r\n\r\n  program\r\n    .version(require('../../package.json').version);\r\n\r\n  createCommand(program, 'install [services...]')\r\n    .action(_.partial(runBoxOp, box, 'install'));\r\n\r\n  createCommand(program, 'update [services...]')\r\n    .action(_.partial(runBoxOp, box, 'update'));\r\n\r\n  createCommand(program, 'start [services...]')\r\n    .action(_.partial(runBoxOp, box, 'start'));\r\n\r\n  createCommand(program, 'stop [services...]')\r\n    .action(_.partial(runBoxOp, box, 'stop'));\r\n\r\n  createCommand(program, 'reset [services...]')\r\n    .action(_.partial(runBoxOp, box, 'reset'));\r\n\r\n  createCommand(program, 'status [services...]')\r\n    .action(_.partial(runBoxOp, box, 'status'));\r\n\r\n  program.command('help')\r\n    .action(function() {\r\n      program.help();\r\n    });\r\n\r\n  program.parse(process.argv);\r\n})();\r\n"]}