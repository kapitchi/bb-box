{"version":3,"sources":["../../src/services/bb-box.js"],"names":["_","require","globby","fs","path","AbstractService","Joi","shell","iplib","serviceSchema","object","name","string","options","allowUnknown","BbBox","constructor","bbBoxOpts","runtimeLocal","cwd","optional","default","process","plugins","runtimes","local","setLogger","logger","registerPlugin","plugin","register","push","shutdown","onUnregister","runtimeName","install","params","op","runOp","update","start","stop","reset","status","service","discover","services","Error","runtime","getRuntime","ctx","allow","array","skipDependencies","boolean","ran","isEmpty","serviceNames","intersection","keys","map","ser","run","outputInfo","serviceName","runPlugins","upperFirst","runDependecies","_runDependencies","disableOp","isBoolean","disableOps","get","log","level","msg","state","writeFileSync","dependsOn","dep","peerService","ret","filePath","_shell","test","loadServiceFile","defaults","discoverServices","defaultsDeep","hostIp","address","expose","isInteger","port","ip","isArray","exp","isUndefined","parent","env","globalEnv","exec","findService","getParent","console","printServiceInfo","childService","p","dir","dirname","pushd","file","localPath","merge","statePath","popd","basename","paths","sync","absolute","e","stack","pluginServices","hook","isFunction","x","config","silent","fatal","module","exports"],"mappings":"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","file":"bb-box.js","sourcesContent":["const _ = require('lodash');\nconst globby = require('globby');\nconst fs = require('fs');\nconst path = require('path');\nconst {AbstractService, Joi} = require('@kapitchi/bb-service');\nconst shell = require('shelljs');\nconst iplib = require('ip');\n\nconst serviceSchema = Joi.object({\n  name: Joi.string()\n}).options({allowUnknown: true});\n\nclass BbBox extends AbstractService {\n  /**\n   *\n   * @param bbBoxOpts\n   */\n  constructor(bbBoxOpts, runtimeLocal) {\n    super(bbBoxOpts, {\n      cwd: Joi.string().optional().default(process.cwd()),\n    });\n\n    this.plugins = [];\n    this.runtimes = {\n      local: runtimeLocal\n    };\n  }\n\n  setLogger(logger) {\n    super.setLogger(logger);\n    this.runtimes.local.setLogger(logger);\n  }\n\n  /**\n   *\n   * @param plugin\n   */\n  registerPlugin(plugin) {\n    plugin.register(this);\n    this.plugins.push(plugin);\n  }\n\n  async shutdown() {\n    for (const plugin of this.plugins) {\n      if (plugin['onUnregister']) {\n        await plugin.onUnregister();\n      }\n    }\n\n    for (const runtimeName in this.runtimes) {\n      if (this.runtimes[runtimeName]['onUnregister']) {\n        await this.runtimes[runtimeName].onUnregister();\n      }\n    }\n  }\n\n  /**\n   *\n   * @param params\n   * @returns {Promise.<void>}\n   */\n  async install(params) {\n    params.op = 'install';\n    return this.runOp(params);\n  }\n\n  /**\n   *\n   * @param params\n   * @returns {Promise.<void>}\n   */\n  async update(params) {\n    params.op = 'update';\n    return this.runOp(params);\n  }\n\n  async start(params) {\n    params.op = 'start';\n    return this.runOp(params);\n  }\n\n  async stop(params) {\n    params.op = 'stop';\n    return this.runOp(params);\n  }\n\n  async reset(params) {\n    params.op = 'reset';\n    return this.runOp(params);\n  }\n\n  async status(params) {\n    params.op = 'status';\n    return this.runOp(params);\n  }\n\n  async shell(params) {\n    params = this.params(params, {\n      service: Joi.string()\n    });\n\n    const service = await this.discover();\n    if (!service.services[params.service]) {\n      throw new Error('Not existing service');\n    }\n\n    const runtime = await this.getRuntime(params.service);\n    await runtime.shell({\n      service,\n      op: params.op,\n      ctx\n    });\n  }\n\n  async runOp(params) {\n    params = this.params(params, {\n      op: Joi.string().allow('install', 'update', 'start', 'stop', 'reset', 'status'),\n      services: Joi.array().optional(),\n      skipDependencies: Joi.boolean().optional().default(false)\n    });\n\n    const service = await this.discover();\n\n    const ctx = {\n      ran: {}\n    };\n\n    let services = [];\n    if (!_.isEmpty(params.services)) {\n      //parent service\n      services.push(service);\n\n      //run on selected dependencies\n      const serviceNames = _.intersection(_.keys(service.services), params.services);\n      services = serviceNames.map(name => {\n        return service.services[name];\n      });\n    }\n    else {\n      //parent service\n      services.push(service);\n\n      //run for current/parent service\n      if (!params.skipDependencies) {\n        const serviceNames = _.keys(service.services);\n        //run on dependencies first\n        services.push(...serviceNames.map(name => {\n          return service.services[name];\n        }));\n      }\n    }\n\n    for (const ser of services) {\n      await this.run({\n        service: ser,\n        op: params.op,\n        ctx,\n        skipDependencies: params.skipDependencies\n      });\n    }\n\n    if (params.op === 'status') {\n      this.outputInfo(service);\n    }\n  }\n\n  async run(params) {\n    //we want this by reference, this.params clones the params\n    const {service, ctx} = params;\n    params = this.params(params, {\n      service: serviceSchema,\n      op: Joi.string().allow('install', 'update', 'start', 'stop', 'reset', 'status'),\n      ctx: Joi.object(),\n      skipDependencies: Joi.boolean().optional().default(false)\n    });\n\n    //make sure we run a particular operation on a service once only\n    if (ctx.ran[service.name + params.op]) {\n      return;\n    }\n\n    const serviceName = `[${service.name}@${service.runtime}]`;\n\n    await this.runPlugins(`on${_.upperFirst(params.op)}Before`, {\n      service: params.service,\n      ctx,\n    });\n\n    let runDependecies = true;\n    if (params.op !== 'stop') {\n      await this._runDependencies(ctx, service, params);\n      runDependecies = false;\n    }\n\n    ctx.ran[service.name + params.op] = true;\n\n    let disableOp = false;\n    if (_.isBoolean(service.disableOps)) {\n      disableOp = service.disableOps;\n    } else {\n      disableOp = _.get(service, `disableOps.${params.op}`, false);\n    }\n\n    if (disableOp) {\n      this.logger.log({\n        level: 'info',\n        msg: `${serviceName} Skipping ${params.op}`\n      });\n\n      if (runDependecies) {\n        await this._runDependencies(ctx, service, params);\n      }\n\n      return;\n    }\n\n    this.logger.log({\n      level: 'info',\n      msg: `${serviceName} ${params.op}...`\n    });\n\n    const runtime = await this.getRuntime(service);\n    await runtime.run({\n      service,\n      op: params.op,\n      ctx\n    });\n\n    await this.runPlugins(`on${_.upperFirst(params.op)}After`, {\n      service: params.service,\n      ctx\n    });\n\n    if (service.runtime === 'local' && service.state) {\n      if (!service.cwd) {\n        throw new Error('Service has no \"cwd\" set');\n      }\n      fs.writeFileSync(service.cwd + '/bb-box.state.json', JSON.stringify(service.state, null, 2));\n    }\n\n    this.logger.log({\n      level: 'info',\n      msg: `${serviceName} ... done`\n    });\n\n    if (runDependecies) {\n      await this._runDependencies(ctx, service, params);\n    }\n  }\n\n  async _runDependencies(ctx, service, params) {\n    if (!params.skipDependencies && !_.isEmpty(service.dependsOn)) {\n      for (const dep of service.dependsOn) {\n        const peerService = _.get(service, `parent.services.${dep}`);\n        if (!peerService) {\n          throw new Error(`Unknown peer service ${dep} of ${service.name}`);\n        }\n\n        await this.run({\n          service: peerService,\n          op: params.op,\n          ctx: ctx\n        });\n\n        //start peer services for install/update\n        if (params.op === 'install' || params.op === 'update') {\n          await this.run({\n            service: peerService,\n            op: 'start',\n            ctx: ctx\n          });\n        }\n      }\n    }\n  }\n\n  async discover(cwd) {\n    if (!cwd) {\n      cwd = this.options.cwd;\n    }\n\n    let ret = {\n      name: 'ROOT'\n    };\n\n    const filePath = cwd + '/bb-box.js';\n    if (this._shell.test('-f', filePath)) {\n      ret = this.loadServiceFile(filePath);\n    }\n\n    _.defaults(ret, {\n      runtime: 'local'\n    });\n\n    let services = await this.discoverServices(cwd);\n    ret.services = _.defaultsDeep({}, ret.services, services);\n      \n    const hostIp = iplib.address();\n    \n    //normalize service properties and set the parent\n    for (const name in ret.services) {\n      const ser = ret.services[name];\n\n      let expose = ser.expose;\n\n      if (_.isInteger(ser.expose)) {\n        expose = [\n          {port: ser.expose, ip: hostIp}\n        ];\n      } else if (_.isArray(expose)) {\n        expose = expose.map(exp => {\n          return {\n            ip: _.get(exp, 'ip', hostIp),\n            port: exp.port\n          }\n        });\n      } else if (_.isUndefined(expose)) {\n        this.logger.log({\n          level: 'warn',\n          msg: `Service ${name} does not have any exposed ports`\n        });\n      } else {\n        throw new Error('Unknown expose format: ' + expose);\n      }\n\n      ser.expose = expose;\n\n      ser.parent = ret;\n      ser.env = _.defaults({}, ret.services[name].env, ret.globalEnv);\n      ser.exec = _.defaults({}, ret.services[name].exec, _.get(ret, 'defaults.exec'));\n      _.defaults(ser, {\n        runtime: 'local'\n      });\n    }\n\n    return ret;\n  }\n\n  async findService(serviceName) {\n    const service = await this.discover();\n    if (!service.services || !service.services[serviceName]) {\n      return null;\n    }\n    return service.services[serviceName];\n  }\n\n  getParent(service) {\n    while (service.parent) {\n      service = service.parent;\n    }\n\n    return service;\n  }\n\n  outputInfo(service) {\n    console.log('=============='); //XXX\n    console.log('Service status'); //XXX\n    console.log('=============='); //XXX\n    this.printServiceInfo(service);\n  }\n\n  printServiceInfo(service) {\n    console.log(`[${service.name}@${service.runtime}]: ${service.status}`); //XXX\n\n    if (!service.services) {\n      return;\n    }\n\n    for (const childService of Object.values(service.services)) {\n      this.printServiceInfo(childService);\n    }\n  }\n\n  loadServiceFile(p) {\n    const dir = path.dirname(p);\n\n    this._shell.pushd(dir);\n\n    const file = require(p);\n\n    const localPath = dir + '/bb-box.local.js';\n    if (this._shell.test('-f', localPath)) {\n      const local = require(localPath);\n      _.merge(file, local);\n    }\n\n    const statePath = dir + '/bb-box.state.json';\n    if (this._shell.test('-f', statePath)) {\n      file.state = require(statePath);\n    } else {\n      file.state = {};\n    }\n\n    this._shell.popd();\n\n    file.cwd = dir;\n\n    if (!file.name) {\n      file.name = path.basename(dir);\n    }\n\n    _.defaults(file, {\n      //runtime: 'local' // cannot be set here, because docker-compose service runtime won't be set\n    });\n\n    return file;\n  }\n\n  async discoverServices(cwd) {\n    const paths = globby.sync('*/bb-box.js', {\n      cwd: cwd,\n      absolute: true\n    });\n\n    const services = {};\n    for (const p of paths) {\n      try {\n        const file = this.loadServiceFile(p);\n        services[file.name] = file;\n      } catch (e) {\n        throw new Error(`Service file error. Service disabled. ${p}: ${e}\\n${e.stack}`);\n      }\n    }\n\n    const pluginServices = await this.runPlugins('discoverServices');\n\n    //TODO do some magic to merge/select values from discovered plugin services\n    _.defaultsDeep(services, pluginServices);\n\n    return services;\n  }\n\n  /**\n   * Must return something what can be deepMerged\n   *\n   * @param hook\n   * @param [params]\n   * @returns {Promise.<void>}\n   */\n  async runPlugins(hook, params) {\n    const ret = {};\n\n    for (const plugin of this.plugins) {\n      if (!_.isFunction(plugin[hook])) {\n        continue;\n      }\n\n      const x = await plugin[hook](params);\n      _.defaultsDeep(ret, x);\n    }\n\n    return ret;\n  }\n\n  async getRuntime(service) {\n    const runtimeName = _.get(service, 'runtime', 'local');\n    if (!this.runtimes[runtimeName]) {\n      throw new Error(`No runtime registered ${runtimeName}`);\n    }\n\n    return this.runtimes[runtimeName];\n  }\n\n  get _shell() {\n    //https://github.com/shelljs/shelljs#configsilent\n    shell.config.reset();\n    shell.config.silent = true;\n    shell.config.fatal = true;\n    //shell.config.verbose = true;\n    return shell;\n  }\n}\n\nmodule.exports = BbBox;\n"]}